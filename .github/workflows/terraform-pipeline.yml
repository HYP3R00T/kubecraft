name: Terraform pipeline

on:
  workflow_dispatch:
  push:
    paths:
      - 'terraform/**'
    branches:
      - main

permissions:
  id-token: write
  contents: read

env:
  ARM_ACCESS_KEY: ${{ secrets.ARM_ACCESS_KEY }}
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

jobs:
  plan:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Setup terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform format check
        continue-on-error: true
        id: fmt
        run: terraform fmt -check

      - name: Terraform init
        id: init
        run: terraform init

      - name: Terraform validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform plan
        id: plan
        run: terraform plan -no-color -out terraform-plan

      - uses: actions/github-script@v7
        name: Generate step summary data
        id: summary-values
        env:
          FMT_OUTCOME: ${{ steps.fmt.outcome }}
          INIT_OUTCOME: ${{ steps.init.outcome }}
          VALIDATE_OUTCOME: ${{ steps.validate.outcome }}
          VALIDATE_OUTPUT: ${{ steps.validate.outputs.stdout }}
          PLAN_OUTCOME: ${{ steps.plan.outcome }}
          PLAN_OUTPUT: ${{ steps.plan.outputs.stdout }}
        with:
          script: |
            return {
              fmtOutcome: process.env.FMT_OUTCOME,
              initOutcome: process.env.INIT_OUTCOME,
              validateOutcome: process.env.VALIDATE_OUTCOME,
              validateOutput: process.env.VALIDATE_OUTPUT,
              planOutcome: process.env.PLAN_OUTCOME,
              planOutput: process.env.PLAN_OUTPUT
            };

      - uses: austenstone/markdown-interpolation-action@main
        with:
          values: ${{ steps.summary-values.outputs.result }}
          files-regex: step_summary_template.md
          

      - name: Annotate step summary with plan results
        run: |
          cat ${{ github.workspace }}/.github/step_summary_template.md

          echo "*Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*" >> $GITHUB_STEP_SUMMARY

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: plan
          path: ./terraform

  apply:
    runs-on: ubuntu-latest
    environment: staging
    needs: plan
    defaults:
      run:
        working-directory: ./terraform
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Setup terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform init
        run: terraform init

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: plan
          path: ./terraform

      - name: Inspect plan file
        run: |
          ls -algh .
          ls -algh terraform-plan

      # - name: Terraform apply
      #   run: terraform apply -auto-approve terraform-plan
 
